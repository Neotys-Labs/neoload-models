name: Main Workflow (Build & Test & Sonar)
on:
  push:
    branches:
      - v3
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8.0
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B -Dmaven.test.failure.ignore=true -Dmaven.javadoc.skip=true verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar  -Dsonar.projectKey=com.neotys.neoload:neoload-models -Dsonar.organization=neotys -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN -Dsonar.branch='${{github.head_ref}}'
      - name: Set PROJECT_SNAPSHOT_VERSION environment variable
        run: echo "PROJECT_SNAPSHOT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: Set SIMPLIFIED_BRANCH_NAME environment variable
        run: echo "SIMPLIFIED_BRANCH_NAME=$(echo "${{github.head_ref}}" | sed -r -e 's/^(featuregroup|feature|hotfix)\///' -e 's/\//-/')" >> $GITHUB_ENV
      - name: Set BRANCH_SNAPSHOT_VERSION environment variable
        run: echo "BRANCH_SNAPSHOT_VERSION=$(projectSnapshotVersion="${{env.PROJECT_SNAPSHOT_VERSION}}" && echo "${projectSnapshotVersion::6}-${{env.SIMPLIFIED_BRANCH_NAME}}-SNAPSHOT")" >> $GITHUB_ENV
      - name: Update branch version
        run: mvn -B build-helper:parse-version versions:set -DnewVersion='${{env.BRANCH_SNAPSHOT_VERSION}}'
      - name: Push new snapshot
        run: mvn -B -P sign-artifact deploy